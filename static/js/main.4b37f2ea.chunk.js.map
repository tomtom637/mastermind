{"version":3,"sources":["components/GlobalStyle.js","utils/mastermind.js","components/StartGameBtn.js","components/Secret.js","components/Guesses.js","components/Answers.js","components/SecretInput.js","App.js","serviceWorker.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Mastermind","colors","numOfColorsToFind","this","secret","count","initGame","newSecret","i","j","Math","random","length","push","makeSecret","console","log","guess","correctColorsAndPositions","correctColorsWrongPositions","secretCheck","Button","styled","motion","button","StartGameBtn","props","setMm","setStarted","setNumGuess","setGuesses","setAnswers","setWon","initial","scale","animate","whileTap","onClick","mastermind","SecretContainer","div","Secret","won","mm","className","style","background","map","val","index","key","GuessesContainer","Guesses","guesses","started","numGuess","singleGuess","singleIndex","AnswersContainer","Answers","answers","answer","singleAnswer","SecretInput","prev","GameWrapper","Wrapper","App","useState","useEffect","checkGuess","play","black","white","answerView","animateScroll","scrollToBottom","containerId","duration","id","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4b37f2ea.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nbody {\r\n  background-color: #282c34;\r\n  color: #eee;\r\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n}\r\n\r\n.game-body {\r\n    margin: 5px 0;\r\n    display: flex;\r\n    width: 100%;\r\n    overflow-y: scroll;\r\n    flex-grow: 1;\r\n    -ms-overflow-style: none;\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n  }\r\n  .row {\r\n    margin-top: 20px;\r\n    margin-bottom: 10px;\r\n    width: 100%;\r\n    height: 35px;\r\n    min-height: 35px;\r\n    background: rgba(255, 255, 255, 0.2);\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 0 25px;\r\n    align-items: center;\r\n  }\r\n  @media (min-width: 500px) {\r\n    .row {\r\n      margin-top: 20px;\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n  .box {\r\n    width: 15px;\r\n    height: 15px;\r\n    max-width: 15px;\r\n    max-height: 15px;\r\n    border-radius: 50%;\r\n    background-size: cover;\r\n    transform: scale(3.5) translateY(-3px);\r\n  }\r\n  @media (min-width: 500px) {\r\n    .box {\r\n      transform: scale(4);\r\n    }\r\n  }\r\n  .box-small {\r\n    width: 15px;\r\n    height: 15px;\r\n    background: rgba(255, 255, 255, 0.05);\r\n    border-radius: 50%;\r\n    border: 1px solid rgba(0, 0, 0, 0.2);\r\n  }\r\n  .box-small--white {\r\n    background: #ddd;\r\n  }\r\n  .box-small--black {\r\n    background: #111;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","export default class Mastermind {\r\n  constructor(colors /*array*/, numOfColorsToFind /*num*/) {\r\n    this.colors = colors; // array\r\n    this.numOfColorsToFind = numOfColorsToFind; // num\r\n    this.secret = []; // array\r\n    this.count = 0; // num\r\n    this.initGame(); // method\r\n  }\r\n  makeSecret() {\r\n    let newSecret = [];\r\n    for (let i = 0; i < this.numOfColorsToFind; i++) {\r\n      let j = ~~(Math.random() * this.colors.length);\r\n      newSecret.push(this.colors[j]);\r\n    }\r\n    return newSecret;\r\n  }\r\n  initGame() {\r\n    this.secret = this.makeSecret(); // returns an array\r\n    console.log(\r\n      `possible colors: ${this.colors}\\n\\nfind the ${this.numOfColorsToFind} colors code...`\r\n    );\r\n  }\r\n  play(guess /*array*/) {\r\n    // submitted by player\r\n    let correctColorsAndPositions = 0;\r\n    let correctColorsWrongPositions = 0;\r\n    let secretCheck = [...this.secret];\r\n    this.count++;\r\n    for (let i = 0; i < this.numOfColorsToFind; i++) {\r\n      if (secretCheck[i] === guess[i]) {\r\n        secretCheck[i] = null;\r\n        guess[i] = null;\r\n        correctColorsAndPositions++;\r\n      }\r\n    }\r\n    for (let i = 0; i < this.numOfColorsToFind; i++) {\r\n      for (let j = 0; j < this.numOfColorsToFind; j++) {\r\n        if (secretCheck[i] !== null && secretCheck[i] === guess[j]) {\r\n          secretCheck[i] = null;\r\n          guess[j] = null;\r\n          correctColorsWrongPositions++;\r\n        }\r\n      }\r\n    }\r\n    return [correctColorsAndPositions, correctColorsWrongPositions];\r\n  }\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { motion } from 'framer-motion';\r\nimport mastermind from '../utils/mastermind.js';\r\n\r\nconst Button = styled(motion.button)`\r\n  color: #eee;\r\n  font-size: 20px;\r\n  padding: 15px 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  border: none;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nfunction StartGameBtn(props) {\r\n  const {\r\n    setMm,\r\n    setStarted,\r\n    setNumGuess,\r\n    setGuesses,\r\n    setAnswers,\r\n    setWon,\r\n  } = props;\r\n\r\n  const handleClick = () => {\r\n    setMm(new mastermind(['8', '2', '4', '6', '1', '5'], 4));\r\n    setStarted(true);\r\n    setNumGuess([]);\r\n    setGuesses([]);\r\n    setAnswers([]);\r\n    setWon(false);\r\n  };\r\n  return (\r\n    <Button\r\n      initial={{ scale: 1.1 }}\r\n      animate={{ scale: 1 }}\r\n      whileTap={{ scale: 1.1 }}\r\n      onClick={handleClick}\r\n    >\r\n      NEW GAME\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default StartGameBtn;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst SecretContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: none;\r\n  .row-secret {\r\n    padding-left: 4rem !important;\r\n    padding-right: 4rem !important;\r\n  }\r\n`;\r\n\r\nfunction Secret({ won, mm }) {\r\n  return (\r\n    <SecretContainer>\r\n      {won && (\r\n        <div\r\n          className=\"row row-secret\"\r\n          style={{ background: 'rgba(0, 0, 0, 0.2)' }}\r\n        >\r\n          {mm.secret.map((val, index) => {\r\n            return <div className={`box img${val}`} key={index} />;\r\n          })}\r\n        </div>\r\n      )}\r\n    </SecretContainer>\r\n  );\r\n}\r\n\r\nexport default Secret;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst GuessesContainer = styled.div`\r\n  width: 65%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  @media (min-width: 500px) {\r\n    width: 75%;\r\n  }\r\n`;\r\n\r\nfunction Guesses({ guesses, started, mm, numGuess }) {\r\n  return (\r\n    <GuessesContainer>\r\n      {guesses.map((guess, index) => {\r\n        return (\r\n          <div className=\"row\" key={index}>\r\n            {guess.map((singleGuess, singleIndex) => {\r\n              return (\r\n                <div className={`box img${singleGuess}`} key={singleIndex} />\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      })}\r\n      <div className=\"row\">\r\n        {started &&\r\n          mm.secret.map((guess, index) => {\r\n            return (\r\n              <div\r\n                className={\r\n                  numGuess[index] ? `box img${numGuess[index]}` : 'box-small'\r\n                }\r\n                key={index}\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n    </GuessesContainer>\r\n  );\r\n}\r\n\r\nexport default Guesses;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst AnswersContainer = styled.div`\r\n  width: 35%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  @media (min-width: 500px) {\r\n    .answers {\r\n      width: 25%;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Answers({ answers, won }) {\r\n  return (\r\n    <AnswersContainer>\r\n      {answers.map((answer, index) => {\r\n        return (\r\n          <div className=\"row\" key={index}>\r\n            {answer.map((singleAnswer, index) => {\r\n              return <div className={singleAnswer} key={index} />;\r\n            })}\r\n          </div>\r\n        );\r\n      })}\r\n      {!won && <div className=\"row\" />}\r\n    </AnswersContainer>\r\n  );\r\n}\r\n\r\nexport default Answers;\r\n","import React from 'react';\r\n\r\nfunction SecretInput({ started, mm, setNumGuess }) {\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        {started &&\r\n          mm.colors.map((val, index) => {\r\n            return (\r\n              <div\r\n                className={`box img${val}`}\r\n                key={index}\r\n                onClick={() => {\r\n                  setNumGuess(prev => {\r\n                    return [...prev, val];\r\n                  });\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SecretInput;\r\n","import React, { useState, useEffect } from 'react';\r\nimport GlobalStyle from './components/GlobalStyle';\r\nimport styled from 'styled-components';\r\nimport { animateScroll } from 'react-scroll';\r\nimport StartGameBtn from './components/StartGameBtn';\r\nimport Secret from './components/Secret';\r\nimport Guesses from './components/Guesses';\r\nimport Answers from './components/Answers';\r\nimport SecretInput from './components/SecretInput';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst GameWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n  max-width: 500px;\r\n  margin: 0 auto;\r\n  .congratulations {\r\n    background: rgba(0, 0, 0, 0.2);\r\n    padding: 20px;\r\n    width: 100%;\r\n    border-radius: 5px;\r\n    margin: auto;\r\n    text-align: center;\r\n    h1 {\r\n      font-size: 20px;\r\n      font-weight: normal;\r\n    }\r\n    p {\r\n      width: 100%;\r\n      margin-top: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  text-align: center;\r\n  @media (min-width: 500px) {\r\n    padding: 5% 0;\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n  const [started, setStarted] = useState(false);\r\n  const [mm, setMm] = useState(null);\r\n  const [numGuess, setNumGuess] = useState([]);\r\n  const [guesses, setGuesses] = useState([]);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [won, setWon] = useState(false);\r\n\r\n  // gives a score after a line is completed\r\n  useEffect(() => {\r\n    if (started && numGuess.length === mm.secret.length) {\r\n      let checkGuess = [...numGuess];\r\n      let [black, white] = mm.play(checkGuess);\r\n      if (black === mm.secret.length) {\r\n        setWon(true);\r\n      }\r\n      let answerView = [];\r\n      for (let i = 0; i < black; i++) {\r\n        answerView.push('box-small box-small--black');\r\n      }\r\n      for (let i = 0; i < white; i++) {\r\n        answerView.push('box-small box-small--white');\r\n      }\r\n      for (let i = 0; i < mm.secret.length - black - white; i++) {\r\n        answerView.push('box-small');\r\n      }\r\n      setAnswers([...answers, [...answerView]]);\r\n    }\r\n  }, [answers, numGuess, mm, started]);\r\n\r\n  // re-initializes the current guesses after a line is completed\r\n  useEffect(() => {\r\n    if (started && numGuess.length === mm.secret.length) {\r\n      setGuesses(prev => {\r\n        return [...prev, [...numGuess]];\r\n      });\r\n      setNumGuess([]);\r\n    }\r\n  }, [numGuess, started, guesses, mm]);\r\n\r\n  // scroll to bottom\r\n  useEffect(() => {\r\n    if (started) {\r\n      animateScroll.scrollToBottom({\r\n        containerId: `game-body`,\r\n        duration: 80,\r\n      });\r\n    }\r\n  }, [started, guesses]);\r\n\r\n  return (\r\n    <Wrapper className=\"App\">\r\n      <GlobalStyle />\r\n      <GameWrapper className=\"game background\">\r\n        <StartGameBtn\r\n          setMm={setMm}\r\n          setStarted={setStarted}\r\n          setNumGuess={setNumGuess}\r\n          setGuesses={setGuesses}\r\n          setAnswers={setAnswers}\r\n          setWon={setWon}\r\n        />\r\n        <Secret won={won} mm={mm} />\r\n        <div className=\"game-body\" id=\"game-body\">\r\n          {!won ? (\r\n            <>\r\n              <Guesses\r\n                guesses={guesses}\r\n                started={started}\r\n                mm={mm}\r\n                numGuess={numGuess}\r\n              />\r\n              <Answers answers={answers} won={won} />\r\n            </>\r\n          ) : (\r\n            <motion.div\r\n              initial={{ scale: 0.2 }}\r\n              animate={{ scale: 1 }}\r\n              className=\"congratulations\"\r\n            >\r\n              <h1>CONGRATULATIONS</h1>\r\n              <p>You've won in {mm.count} guesses</p>\r\n            </motion.div>\r\n          )}\r\n        </div>\r\n        <SecretInput started={started} mm={mm} setNumGuess={setNumGuess} />\r\n      </GameWrapper>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}