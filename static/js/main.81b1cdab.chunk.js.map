{"version":3,"sources":["components/GlobalStyle.js","utils/mastermind.js","components/StartGameBtn.js","components/Secret.js","components/Guesses.js","components/Answers.js","components/SecretInput.js","App.js","serviceWorker.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Mastermind","colors","numOfColorsToFind","this","secret","count","initGame","newSecret","i","j","Math","random","length","push","makeSecret","console","log","guess","correctColorsAndPositions","correctColorsWrongPositions","secretCheck","Button","styled","motion","button","StartGameBtn","props","setMm","setStarted","setNumGuess","setGuesses","setAnswers","setWon","initial","scale","animate","whileTap","onClick","mastermind","SecretContainer","div","Secret","won","mm","className","style","background","map","val","index","key","GuessesContainer","Guesses","guesses","started","numGuess","singleGuess","singleIndex","AnswersContainer","Answers","answers","answer","singleAnswer","SecretInput","prev","GameWrapper","Wrapper","App","useState","useEffect","checkGuess","play","black","white","answerView","animateScroll","scrollToBottom","containerId","duration","id","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.81b1cdab.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  background-color: #282c34;\n  color: #eee;\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\n}\n\n.game-body {\n    margin: 5px 0;\n    display: flex;\n    width: 100%;\n    overflow-y: scroll;\n    flex-grow: 1;\n    -ms-overflow-style: none;\n    &::-webkit-scrollbar {\n      display: none;\n    }\n  }\n  .row {\n    margin-top: 20px;\n    margin-bottom: 15px;\n    width: 100%;\n    height: 35px;\n    min-height: 35px;\n    background: rgba(255, 255, 255, 0.2);\n    display: flex;\n    justify-content: space-between;\n    padding: 25px 25px;\n    align-items: center;\n  }\n  @media (min-width: 500px) {\n    .row {\n      margin-top: 20px;\n      margin-bottom: 20px;\n    }\n  }\n  .box {\n    width: 15px;\n    height: 15px;\n    max-width: 15px;\n    max-height: 15px;\n    border-radius: 50%;\n    background-size: cover;\n    transform: scale(3.5) translateY(-3px);\n  }\n  @media (min-width: 500px) {\n    .box {\n      transform: scale(4);\n    }\n  }\n  .box-small {\n    width: 15px;\n    height: 15px;\n    background: rgba(255, 255, 255, 0.05);\n    border-radius: 50%;\n    border: 1px solid rgba(0, 0, 0, 0.2);\n  }\n  .box-small--white {\n    background: #ddd;\n  }\n  .box-small--black {\n    background: #111;\n  }\n`;\n\nexport default GlobalStyle;\n","export default class Mastermind {\n  constructor(colors /*array*/, numOfColorsToFind /*num*/) {\n    this.colors = colors; // array\n    this.numOfColorsToFind = numOfColorsToFind; // num\n    this.secret = []; // array\n    this.count = 0; // num\n    this.initGame(); // method\n  }\n  makeSecret() {\n    let newSecret = [];\n    for (let i = 0; i < this.numOfColorsToFind; i++) {\n      let j = ~~(Math.random() * this.colors.length);\n      newSecret.push(this.colors[j]);\n    }\n    return newSecret;\n  }\n  initGame() {\n    this.secret = this.makeSecret(); // returns an array\n    console.log(\n      `possible colors: ${this.colors}\\n\\nfind the ${this.numOfColorsToFind} colors code...`\n    );\n  }\n  play(guess /*array*/) {\n    // submitted by player\n    let correctColorsAndPositions = 0;\n    let correctColorsWrongPositions = 0;\n    let secretCheck = [...this.secret];\n    this.count++;\n    for (let i = 0; i < this.numOfColorsToFind; i++) {\n      if (secretCheck[i] === guess[i]) {\n        secretCheck[i] = null;\n        guess[i] = null;\n        correctColorsAndPositions++;\n      }\n    }\n    for (let i = 0; i < this.numOfColorsToFind; i++) {\n      for (let j = 0; j < this.numOfColorsToFind; j++) {\n        if (secretCheck[i] !== null && secretCheck[i] === guess[j]) {\n          secretCheck[i] = null;\n          guess[j] = null;\n          correctColorsWrongPositions++;\n        }\n      }\n    }\n    return [correctColorsAndPositions, correctColorsWrongPositions];\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport mastermind from '../utils/mastermind.js';\n\nconst Button = styled(motion.button)`\n  color: #eee;\n  font-size: 20px;\n  padding: 15px 0;\n  background: rgba(0, 0, 0, 0.5);\n  border: none;\n  margin-bottom: 3px;\n`;\n\nfunction StartGameBtn(props) {\n  const {\n    setMm,\n    setStarted,\n    setNumGuess,\n    setGuesses,\n    setAnswers,\n    setWon,\n  } = props;\n\n  const handleClick = () => {\n    setMm(new mastermind(['8', '2', '4', '6', '1', '5'], 4));\n    setStarted(true);\n    setNumGuess([]);\n    setGuesses([]);\n    setAnswers([]);\n    setWon(false);\n  };\n  return (\n    <Button\n      initial={{ scale: 1.1 }}\n      animate={{ scale: 1 }}\n      whileTap={{ scale: 1.1 }}\n      onClick={handleClick}\n    >\n      NEW GAME\n    </Button>\n  );\n}\n\nexport default StartGameBtn;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst SecretContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: none;\n  .row-secret {\n    padding-left: 4rem !important;\n    padding-right: 4rem !important;\n  }\n`;\n\nfunction Secret({ won, mm }) {\n  return (\n    <SecretContainer>\n      {won && (\n        <div\n          className=\"row row-secret\"\n          style={{ background: 'rgba(0, 0, 0, 0.2)' }}\n        >\n          {mm.secret.map((val, index) => {\n            return <div className={`box img${val}`} key={index} />;\n          })}\n        </div>\n      )}\n    </SecretContainer>\n  );\n}\n\nexport default Secret;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst GuessesContainer = styled.div`\n  width: 65%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  @media (min-width: 500px) {\n    width: 75%;\n  }\n`;\n\nfunction Guesses({ guesses, started, mm, numGuess }) {\n  return (\n    <GuessesContainer>\n      {guesses.map((guess, index) => {\n        return (\n          <div className=\"row\" key={index}>\n            {guess.map((singleGuess, singleIndex) => {\n              return (\n                <div className={`box img${singleGuess}`} key={singleIndex} />\n              );\n            })}\n          </div>\n        );\n      })}\n      <div className=\"row\">\n        {started &&\n          mm.secret.map((guess, index) => {\n            return (\n              <div\n                className={\n                  numGuess[index] ? `box img${numGuess[index]}` : 'box-small'\n                }\n                key={index}\n              />\n            );\n          })}\n      </div>\n    </GuessesContainer>\n  );\n}\n\nexport default Guesses;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst AnswersContainer = styled.div`\n  width: 35%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  @media (min-width: 500px) {\n    .answers {\n      width: 25%;\n    }\n  }\n`;\n\nfunction Answers({ answers, won }) {\n  return (\n    <AnswersContainer>\n      {answers.map((answer, index) => {\n        return (\n          <div className=\"row\" key={index}>\n            {answer.map((singleAnswer, index) => {\n              return <div className={singleAnswer} key={index} />;\n            })}\n          </div>\n        );\n      })}\n      {!won && <div className=\"row\" />}\n    </AnswersContainer>\n  );\n}\n\nexport default Answers;\n","import React from 'react';\n\nfunction SecretInput({ started, mm, setNumGuess }) {\n  return (\n    <>\n      <div className=\"row\">\n        {started &&\n          mm.colors.map((val, index) => {\n            return (\n              <div\n                className={`box img${val}`}\n                key={index}\n                onClick={() => {\n                  setNumGuess(prev => {\n                    return [...prev, val];\n                  });\n                }}\n              />\n            );\n          })}\n      </div>\n    </>\n  );\n}\n\nexport default SecretInput;\n","import React, { useState, useEffect } from 'react';\nimport GlobalStyle from './components/GlobalStyle';\nimport styled from 'styled-components';\nimport { animateScroll } from 'react-scroll';\nimport StartGameBtn from './components/StartGameBtn';\nimport Secret from './components/Secret';\nimport Guesses from './components/Guesses';\nimport Answers from './components/Answers';\nimport SecretInput from './components/SecretInput';\nimport { motion } from 'framer-motion';\n\nconst GameWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  border-radius: 5px;\n  max-width: 500px;\n  margin: 0 auto;\n  .congratulations {\n    background: rgba(0, 0, 0, 0.2);\n    padding: 20px;\n    width: 100%;\n    border-radius: 5px;\n    margin: auto;\n    text-align: center;\n    h1 {\n      font-size: 20px;\n      font-weight: normal;\n    }\n    p {\n      width: 100%;\n      margin-top: 10px;\n    }\n  }\n`;\n\nconst Wrapper = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  text-align: center;\n  @media (min-width: 500px) {\n    padding: 5% 0;\n  }\n`;\n\nfunction App() {\n  const [started, setStarted] = useState(false);\n  const [mm, setMm] = useState(null);\n  const [numGuess, setNumGuess] = useState([]);\n  const [guesses, setGuesses] = useState([]);\n  const [answers, setAnswers] = useState([]);\n  const [won, setWon] = useState(false);\n\n  // gives a score after a line is completed\n  useEffect(() => {\n    if (started && numGuess.length === mm.secret.length) {\n      let checkGuess = [...numGuess];\n      let [black, white] = mm.play(checkGuess);\n      if (black === mm.secret.length) {\n        setWon(true);\n      }\n      let answerView = [];\n      for (let i = 0; i < black; i++) {\n        answerView.push('box-small box-small--black');\n      }\n      for (let i = 0; i < white; i++) {\n        answerView.push('box-small box-small--white');\n      }\n      for (let i = 0; i < mm.secret.length - black - white; i++) {\n        answerView.push('box-small');\n      }\n      setAnswers([...answers, [...answerView]]);\n    }\n  }, [answers, numGuess, mm, started]);\n\n  // re-initializes the current guesses after a line is completed\n  useEffect(() => {\n    if (started && numGuess.length === mm.secret.length) {\n      setGuesses(prev => {\n        return [...prev, [...numGuess]];\n      });\n      setNumGuess([]);\n    }\n  }, [numGuess, started, guesses, mm]);\n\n  // scroll to bottom\n  useEffect(() => {\n    if (started) {\n      animateScroll.scrollToBottom({\n        containerId: `game-body`,\n        duration: 80,\n      });\n    }\n  }, [started, guesses]);\n\n  return (\n    <Wrapper className=\"App\">\n      <GlobalStyle />\n      <GameWrapper className=\"game background\">\n        <StartGameBtn\n          setMm={setMm}\n          setStarted={setStarted}\n          setNumGuess={setNumGuess}\n          setGuesses={setGuesses}\n          setAnswers={setAnswers}\n          setWon={setWon}\n        />\n        <Secret won={won} mm={mm} />\n        <div className=\"game-body\" id=\"game-body\">\n          {!won ? (\n            <>\n              <Guesses\n                guesses={guesses}\n                started={started}\n                mm={mm}\n                numGuess={numGuess}\n              />\n              <Answers answers={answers} won={won} />\n            </>\n          ) : (\n            <motion.div\n              initial={{ scale: 0.2 }}\n              animate={{ scale: 1 }}\n              className=\"congratulations\"\n            >\n              <h1>CONGRATULATIONS</h1>\n              <p>You've won in {mm.count} guesses</p>\n            </motion.div>\n          )}\n        </div>\n        <SecretInput started={started} mm={mm} setNumGuess={setNumGuess} />\n      </GameWrapper>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}